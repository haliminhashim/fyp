{"version":3,"sources":["../../src/pages/account/account.module.ts","../../src/pages/account/account.ts"],"names":[],"mappings":"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","file":"12.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { AccountPage } from './account';\n\n@NgModule({\n  declarations: [\n    AccountPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(AccountPage),\n  ],\n})\nexport class AccountPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/account/account.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, ToastController } from 'ionic-angular';\nimport { UsersProvider } from '../../providers/users/users';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\n\n/**\n * Generated class for the AccountPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-account',\n  templateUrl: 'account.html',\n})\nexport class AccountPage {\n  curpassword: string = \"\";\n  newpassword: string = \"\";\n  conpassword: string = \"\";\n  currentPasswordValid: boolean = false;\n  newPasswordValid: boolean = false;\n  newPasswordNotEmpty: boolean = false;\n  PersonalInfoSubmitAttempt: boolean = false;\n  PasswordSubmitAttempt: boolean = false;\n  account: FormGroup;\n  user: any = this.usersProvider.currentUser();\n  constructor(public navCtrl: NavController, public toastCtrl: ToastController, public navParams: NavParams, public usersProvider: UsersProvider, public formBuilder: FormBuilder) { \n    this.account = this.formBuilder.group({\n      id: this.user.id,\n      username: this.user.username,\n      email: [this.user.email, Validators.compose([Validators.email, Validators.required])],\n      firstname: [this.user.firstname, Validators.required],\n      lastname: [this.user.lastname, Validators.required],\n      gender: [this.user.gender, Validators.required],\n      dob: [this.user.dob, Validators.required],\n    });\n  }\n\n  ionViewDidLoad() {\n  }\n\n  updatePersonalInformation(){\n    this.PersonalInfoSubmitAttempt = true;\n    if(this.account.valid)\n    this.usersProvider.update(this.account.value).then(data => {\n      if(data != {})\n        this.presentToast(\"Personal Information has been sucesfully updated\");\n      else\n        this.presentToast(\"Unable to update information. Please try again\");\n    });\n  }\n\n  updatePassword(){\n    this.PasswordSubmitAttempt = true;\n\n    if(this.curpassword !== this.user.password)\n      this.currentPasswordValid = false;\n    else\n      this.currentPasswordValid = true;\n    \n    if(this.newpassword !== this.conpassword)\n      this.newPasswordValid = false;\n    else\n      this.newPasswordValid = true;\n\n    if(this.newpassword == \"\")\n      this.newPasswordNotEmpty = false;\n    else\n      this.newPasswordNotEmpty = true;\n    \n    if(this.currentPasswordValid && this.newPasswordValid && this.newPasswordNotEmpty){\n      let data = {\n        \"id\": this.user.id,\n        \"password\": this.newpassword\n      }\n      this.usersProvider.update(data).then(data => {\n        if(data != {}){\n          this.curpassword = \"\";\n          this.newpassword = \"\";\n          this.conpassword = \"\";\n          this.presentToast(\"Password has been sucesfully updated\")\n        }\n        else\n          this.presentToast(\"Unable to update information. Please try again\")\n      });\n    }\n  }\n\n  presentToast(msg: string) {\n    let toast = this.toastCtrl.create({\n      message: msg,\n      duration: 2000,\n      position: \"bottom\"\n    });\n\n    toast.onDidDismiss(() => {\n      console.log(\"Dismissed toast\");\n    });\n\n    toast.present();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/account/account.ts"],"sourceRoot":""}